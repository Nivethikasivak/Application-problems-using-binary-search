class Solution {
    public int getdays(int weights[],int cap){
        int days=1;
        int sum=0;
        int n=weights.length;
        for(int i=0;i<n;i++){
            if((sum+weights[i])<=cap){
                sum=sum+weights[i];
            }
            else{
                sum=weights[i];
                days++;
            }
        }
        return days;

    }
    public int shipWithinDays(int[] weights, int days) {
        int n=weights.length;
        int low=0;
        int high=0;
        for(int i=0;i<n;i++){
            low=Math.max(weights[i],low);
            high=high+weights[i];
        }
        int ans=low;
        while(low<=high){
            int mid=(low+high)/2;
            int day=getdays(weights,mid); 
            if(day<=days){
                ans=mid;
                high=mid-1;
            }
            else{
                low=mid+1;
            }
        }
        return ans;
    }
}
